# .github/workflows/places-api-demo.yml
name: üéõÔ∏è Manual Data Collection - Dog Places Brussels

on:
  # UNIQUEMENT MANUEL - pas d'ex√©cution automatique
  workflow_dispatch:
    description: 'Lancement manuel du workflow de collecte de donn√©es'
    inputs:
      workflow_type:
        description: 'Type de workflow √† ex√©cuter'
        required: true
        default: 'both'
        type: choice
        options:
        - 'addresses'     # Gratuit (OpenAddresses)
        - 'places'        # Payant (Google API)
        - 'both'          # Les deux s√©quentiellement
        - 'legacy'        # Anciens scripts
      dry_run:
        description: 'Mode test (pas de sauvegarde r√©elle)'
        required: false
        default: false
        type: boolean

jobs:
  fill-firebase:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm install

    - name: Execute Data Collection (Manual Choice)
      env:
        NODE_ENV: production
        GOOGLE_PLACES_API_KEY: ${{ secrets.GOOGLE_PLACES_API_KEY }}
        EXPO_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.EXPO_PUBLIC_FIREBASE_PROJECT_ID }}
        FIREBASE_PRIVATE_KEY_ID: ${{ secrets.FIREBASE_PRIVATE_KEY_ID }}
        FIREBASE_PRIVATE_KEY: ${{ secrets.FIREBASE_PRIVATE_KEY }}
        FIREBASE_CLIENT_EMAIL: ${{ secrets.FIREBASE_CLIENT_EMAIL }}
        FIREBASE_CLIENT_ID: ${{ secrets.FIREBASE_CLIENT_ID }}
        FIREBASE_CLIENT_X509_CERT_URL: ${{ secrets.FIREBASE_CLIENT_X509_CERT_URL }}
        WORKFLOW_TYPE: ${{ github.event.inputs.workflow_type }}
        DRY_RUN: ${{ github.event.inputs.dry_run }}
      run: |
        echo "üéØ LANCEMENT MANUEL DU WORKFLOW"
        echo "Type s√©lectionn√©: $WORKFLOW_TYPE"
        echo "Mode test: $DRY_RUN"

        case "$WORKFLOW_TYPE" in
          "addresses")
            echo "üè† Lancement workflow ADDRESSES (Gratuit)"
            npm run import:addresses
            ;;
          "places")
            echo "üêï Lancement workflow PLACES (Payant Google API)"
            if [ -z "$GOOGLE_PLACES_API_KEY" ]; then
              echo "‚ùå GOOGLE_PLACES_API_KEY manquante pour le workflow places"
              exit 1
            fi
            npm run import:places
            ;;
          "both")
            echo "üöÄ Lancement workflow COMPLET (Addresses + Places)"
            echo "1/2 üè† Addresses (Gratuit)..."
            npm run import:addresses
            sleep 30
            echo "2/2 üêï Places (Payant)..."
            if [ -n "$GOOGLE_PLACES_API_KEY" ]; then
              npm run import:places
            else
              echo "‚ö†Ô∏è GOOGLE_PLACES_API_KEY manquante, ignorer places"
            fi
            ;;
          "legacy")
            echo "üìö Lancement scripts LEGACY (compatibilit√©)"
            node scripts/scheduleManager.js execute
            ;;
          *)
            echo "‚ùå Type de workflow invalide: $WORKFLOW_TYPE"
            exit 1
            ;;
        esac

        echo "‚úÖ Workflow termin√©!"